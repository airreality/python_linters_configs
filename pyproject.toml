[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "F",  # pyflakes
    "W",  # pycodestyle Warning
    "E",  # pycodestyle Error
    "C90",  # mccabe
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP",  # pyupgrade
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "FA",  # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PGH",  # pygrep-hooks
    "PL",  # pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF",  # perflint
    # "FURB",  # refurb // awaiting non preview version
    "LOG",  # flake8-logging
    "RUF",  # ruff-specific rules

    # OPTIONAL:

    "ASYNC",  # flake8-async
    "S",  # flake8-bandit
    "DTZ",  # flake8-datetimez
    "NPY",  # numpy-specific rules
    "PD",  # pandas-vet
    "PT",  # flake8-pytest-style
]

ignore = [
    "D10",
    "PT004",  # https://github.com/astral-sh/ruff/issues/8796
    "PT005",  # https://github.com/astral-sh/ruff/issues/8796
    "S101",
    "PLR6201",  # set has no sense if you will use it only once
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG001", "FBT001"]  # not compatible with pytest logic

[tool.ruff.lint.flake8-pytest-style]
# https://github.com/astral-sh/ruff/issues/8796
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
force-single-line = false
order-by-type = false
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
# https://github.com/astral-sh/ruff/issues/6606
# convention = "sphinx"
convention = "google"

[tool.mypy]
exclude = ".venv"
python_version = "3.11"

check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
extra_checks = true
follow_imports = "normal"
ignore_missing_imports = true
local_partial_types = true
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
ruff = "^0.3.2"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"
